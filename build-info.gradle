buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.ajoberstar:grgit:1.6.0-rc.1'

    }
}
processResources {
    def grgit = org.ajoberstar.grgit.Grgit.open(dir: '.')
    def branch = grgit.branch.getCurrent().getName() + '-' + grgit.head().id
    def repos = grgit.remote.list().collect { remote ->
        def url = remote.url
        def gitPostfix = url.indexOf(".git")
        return url.substring(url.indexOf(":") + 1, gitPostfix == -1 ? url.length() : gitPostfix)
    }.unique(false)

    project.properties.ext.set("branch", branch)
    project.properties.ext.set("repos", repos)
    filesMatching('**/bootstrap.yaml') {
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: project.properties.findAll { it.value instanceof String }.collectEntries {
            [it.key, it.value]
        })
    }
    outputs.upToDateWhen { false }
}
